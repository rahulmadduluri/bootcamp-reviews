// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type CampusLocation struct {
	Location             Location `json:"location"`
	MedianGraduateSalary *float64 `json:"medianGraduateSalary"`
	JobPlacementRate     *float64 `json:"jobPlacementRate"`
}

type City struct {
	UUID string `json:"uuid"`
	Name string `json:"name"`
}

type Country struct {
	UUID string `json:"uuid"`
	Name string `json:"name"`
}

type CreateStudentInput struct {
	UUID             string `json:"uuid"`
	FirstName        string `json:"firstName"`
	LastName         string `json:"lastName"`
	Email            string `json:"email"`
	LinkedInPhotoURL string `json:"linkedInPhotoURL"`
}

type Filters struct {
	Locations    []Location `json:"locations"`
	PaymentTypes []string   `json:"paymentTypes"`
	MinLengths   []int      `json:"minLengths"`
	MaxPrices    []int      `json:"maxPrices"`
}

type Location struct {
	UUID    string  `json:"uuid"`
	City    City    `json:"city"`
	Country Country `json:"country"`
}

type NewReviewParams struct {
	AllText                   string `json:"allText"`
	TeachingScore             int    `json:"teachingScore"`
	CourseworkScore           int    `json:"courseworkScore"`
	AtmosphereScore           int    `json:"atmosphereScore"`
	CareerPreparationScore    int    `json:"careerPreparationScore"`
	HasJob                    bool   `json:"hasJob"`
	SalaryBefore              *int   `json:"salaryBefore"`
	SalaryAfter               *int   `json:"salaryAfter"`
	SchoolUUID                string `json:"schoolUUID"`
	SchoolLocationUUID        string `json:"schoolLocationUUID"`
	JobLocationUUID           string `json:"jobLocationUUID"`
	SchoolGraduationTimestamp *int   `json:"schoolGraduationTimestamp"`
	JobStartTimestamp         *int   `json:"jobStartTimestamp"`
}

type Review struct {
	UUID                      string    `json:"uuid"`
	AllText                   string    `json:"allText"`
	TeachingScore             int       `json:"teachingScore"`
	CourseworkScore           int       `json:"courseworkScore"`
	AtmosphereScore           int       `json:"atmosphereScore"`
	CareerPreparationScore    int       `json:"careerPreparationScore"`
	OverallScore              float64   `json:"overallScore"`
	HelpfulUpvotes            int       `json:"helpfulUpvotes"`
	HelpfulDownvotes          int       `json:"helpfulDownvotes"`
	HasJob                    bool      `json:"hasJob"`
	SalaryBefore              *int      `json:"salaryBefore"`
	SalaryAfter               *int      `json:"salaryAfter"`
	School                    School    `json:"school"`
	SchoolLocation            Location  `json:"schoolLocation"`
	SchoolGraduationTimestamp *int      `json:"schoolGraduationTimestamp"`
	JobLocation               *Location `json:"jobLocation"`
	JobStartTimestamp         *int      `json:"jobStartTimestamp"`
	CreatedTimestamp          int       `json:"createdTimestamp"`
}

type School struct {
	UUID            string           `json:"uuid"`
	Name            string           `json:"name"`
	LengthInWeeks   *int             `json:"lengthInWeeks"`
	IsOnline        *bool            `json:"isOnline"`
	BasePrice       *int             `json:"basePrice"`
	PaymentType     *string          `json:"paymentType"`
	PhotoURI        *string          `json:"photoURI"`
	CampusLocations []CampusLocation `json:"campusLocations"`
}

type SchoolQueryResult struct {
	TotalNumResults int      `json:"totalNumResults"`
	PageNumber      int      `json:"pageNumber"`
	SchoolResults   []School `json:"schoolResults"`
}

type SchoolSearchParams struct {
	PageNumber          int      `json:"pageNumber"`
	SearchText          *string  `json:"searchText"`
	LocationUUID        *string  `json:"locationUUID"`
	PaymentType         *string  `json:"paymentType"`
	MaxPrice            *int     `json:"maxPrice"`
	MinGraduateSalary   *float64 `json:"minGraduateSalary"`
	MinJobPlacementRate *float64 `json:"minJobPlacementRate"`
	MinLength           *int     `json:"minLength"`
}

type Student struct {
	UUID             string  `json:"uuid"`
	FirstName        string  `json:"firstName"`
	LastName         string  `json:"lastName"`
	PhotoURI         *string `json:"photoURI"`
	LinkedInPhotoURL *string `json:"linkedInPhotoURL"`
	School           *School `json:"school"`
}

type UpdateStudentInput struct {
	UUID        string  `json:"uuid"`
	FirstName   *string `json:"firstName"`
	LastName    *string `json:"lastName"`
	Email       *string `json:"email"`
	LinkedInURL *string `json:"linkedInURL"`
	SchoolUUID  *string `json:"schoolUUID"`
}

type School {
	uuid: ID!
	name: String!
	avgGraduateSalary: Float
	acceptanceRate: Float
	jobPlacementRate: Float
	lengthInWeeks: Int
	isOnline: Boolean
	basePrice: Int
	paymentType: String # e.g. ISA, Upfront
	photoURI: String
	locations: [Location!]
	tracks: [Track!]
}

type Location {
	uuid: ID!
	city: String
	country: String!
}

type Track {
	uuid: ID!
	name: String!
}

input SchoolSearchParams {
	trackUUID: ID
	locationUUID: ID
	paymentType: String
	maxPrice: Int
	minGraduateSalary: Float
	minJobPlacementRate: Float
	minLength: Int
	isOnline: Boolean
}

type Filters {
	tracks: [Track!]!
	locations: [Location!]!
	paymentTypes: [String!]!
}

type Query {
	school(uuid: ID!): School
	schools(params: SchoolSearchParams!): [School!]!
	filters: Filters
}

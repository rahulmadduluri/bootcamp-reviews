type School {
	uuid: ID!
	name: String!
	avgGraduateSalary: Float
	acceptanceRate: Float
	jobPlacementRate: Float
	lengthInWeeks: Int
	isOnline: Boolean
	basePrice: Int
	paymentType: String # e.g. ISA, Upfront
	photoURI: String
	locations: [Location!]
	tracks: [Track!]
}

type Location {
	uuid: ID!
	city: String
	country: String!
}

type Track {
	uuid: ID!
	name: String!
}

input SchoolSearchParams {
	country: String
	trackUUID: ID
	paymentType: String
	sortByPriceLowToHigh: Boolean
	sortByPriceHighToLow: Boolean
	sortByGraduateSalaryHighToLow: Boolean
	sortByJobPlacementRateHighToLow: Boolean
	minLength: Int
	isOnline: Boolean
}

type Query {
	school(uuid: ID!): School
	schools(params: SchoolSearchParams!): [School!]!
}
